import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
ap={'product_id':pd.Series(["p001","p002","p003","p004","p005","p006","p007","p008","p009","p010","p001"]),
   'product_name':pd.Series(["shirt","pendent","Maybelline kajal","microwave","lakmefoundation","painting","bangles","hoodie","blender","flowervas","shirt"]),
   
   'Quanity':pd.Series([10,10,10,50,10,80,30,10,90,10,10]),
   'cost':pd.Series([np.nan,30,30,40,20,60,20,30,60,70,np.nan]),
   'Discount':pd.Series([40,20,20,30,5,40,10,0,20,0,40]),
   }
p=pd.DataFrame(ap)
print(p)
print()
p['Fcost']=p['cost']-p['Discount']
print("---CREATE---")
print(p)
print()
print("---RETRIVE---")
print(p['product_name'])
print()
print(p.loc[4])
print()
print("---UPDATE---")
print("Before update")
print(p)
print()
print("After update")
p['Quanity'][3]=500
print(p)
print()
p.loc[4,'Discount']=0
print(p)
print()
print("---DELETE---")
print("before delete")
print(p)
print()
x=p.drop(3)
print("After delete")
print(x)
print()
print("--------------------DATA PREPROCESSING--------------------")
print("---DATA COLLECTION---")
print(p)
print()
print("---DATA CLEANING---")
print("By using isnull method:")
x=p.isnull()
print(x)
print("By using notnull method:")
x=p.notnull()
print(x)
print()
print("---DATA INTEGERATION---")
print("By using bfill method:")
x=p.fillna(method="bfill")
print(x)
print("By using pad method:")
x=p.fillna(method="pad")
print(x)
print("By using fillna method:")
x=p.fillna(270)
print(x)
print()
print("---DATA REDUCATION")
x=p.drop_duplicates()
x=p.fillna(270)
print(x)
print()
print("The Correlation between cost and discount is",p['cost'].corr(p['Discount']))
print("The Correlation between quanity and discount is",p['Quanity'].corr(p['Discount']))
plt.hist(p['Quanity'], bins=10, color='skyblue', edgecolor='black')
plt.xlabel('Quantity')
plt.ylabel('Frequency')
plt.title('Distribution of Quantity')
plt.show()
plt.figure(figsize=(10, 6))
plt.bar(p['product_name'], p['cost'], color='orange', label='Cost')
plt.bar(p['product_name'], p['Discount'], color='blue', label='Discount')
plt.xlabel('Product Name')
plt.ylabel('Amount')
plt.title('Cost vs Discount Comparison')
plt.xticks(rotation=45)
plt.legend()
plt.show()
columns_to_plot = ['Quanity', 'cost', 'Discount']

for column in columns_to_plot:
    plt.figure(figsize=(8, 5))
    plt.plot(p.index, p[column], marker='o', linestyle='-')
    plt.title(column + ' Over Product Index')
    plt.xlabel('Product Index')
    plt.ylabel(column)
   
    plt.show()